// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/checkBox Renders default options 1`] = `
<CheckboxComponent
  disabled={false}
  handleCheckBoxValue={[Function]}
  hideButton={false}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [],
    }
  }
  label=""
  meta={
    Object {
      "error": "",
      "submitFailed": false,
    }
  }
  onHideBtnClick={[Function]}
  row={true}
  values={Array []}
  visible={false}
>
  <WithStyles(ForwardRef(Grid))
    className="container"
    container={true}
    direction="row"
  >
    <ForwardRef(Grid)
      className="container"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
      direction="row"
    >
      <div
        className="MuiGrid-root container MuiGrid-container"
      >
        <WithStyles(ForwardRef(Grid))
          className="label"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="label"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root label MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            />
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="inputWrapper"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="inputWrapper"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root inputWrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              <WithStyles(ForwardRef(FormGroup))
                row={true}
              >
                <ForwardRef(FormGroup)
                  classes={
                    Object {
                      "root": "MuiFormGroup-root",
                      "row": "MuiFormGroup-row",
                    }
                  }
                  row={true}
                >
                  <div
                    className="MuiFormGroup-root MuiFormGroup-row"
                  />
                </ForwardRef(FormGroup)>
              </WithStyles(ForwardRef(FormGroup))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</CheckboxComponent>
`;

exports[`components/checkBox Renders with error options 1`] = `
<CheckboxComponent
  disabled={false}
  handleCheckBoxValue={[Function]}
  hideButton={true}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [],
    }
  }
  label="Dummy Label"
  meta={
    Object {
      "error": "Sample Error",
      "submitFailed": true,
    }
  }
  onHideBtnClick={[Function]}
  row={true}
  values={
    Array [
      Object {
        "label": "label 1",
        "name": "name 1",
      },
      Object {
        "label": "label 2",
        "name": "name 2",
      },
    ]
  }
  visible={false}
>
  <WithStyles(ForwardRef(Grid))
    className="container"
    container={true}
    direction="row"
  >
    <ForwardRef(Grid)
      className="container"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
      direction="row"
    >
      <div
        className="MuiGrid-root container MuiGrid-container"
      >
        <WithStyles(ForwardRef(Grid))
          className="label"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="label"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root label MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              Dummy Label
              <HideButton
                isSection={false}
                onHideBtnClick={[Function]}
                visible={false}
              >
                <div
                  className="hideBtn"
                  onClick={[Function]}
                  role="presentation"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    color="primary"
                    inputProps={
                      Object {
                        "aria-label": "primary checkbox",
                      }
                    }
                    name="checkedA"
                    onChange={[Function]}
                    size="small"
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb",
                          "track": "MuiSwitch-track",
                        }
                      }
                      color="primary"
                      inputProps={
                        Object {
                          "aria-label": "primary checkbox",
                        }
                      }
                      name="checkedA"
                      onChange={[Function]}
                      size="small"
                    >
                      <span
                        className="MuiSwitch-root MuiSwitch-sizeSmall"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                            }
                          }
                          icon={
                            <span
                              className="MuiSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          name="checkedA"
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                              }
                            }
                            icon={
                              <span
                                className="MuiSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            name="checkedA"
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                              component="span"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="primary checkbox"
                                          checked={false}
                                          className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                          name="checkedA"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                  <div
                    className="hideSection"
                  >
                    Hidden
                  </div>
                </div>
              </HideButton>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="inputWrapper"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="inputWrapper"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root inputWrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              <WithStyles(ForwardRef(FormGroup))
                row={true}
              >
                <ForwardRef(FormGroup)
                  classes={
                    Object {
                      "root": "MuiFormGroup-root",
                      "row": "MuiFormGroup-row",
                    }
                  }
                  row={true}
                >
                  <div
                    className="MuiFormGroup-root MuiFormGroup-row"
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "disabled": "disabled",
                          "root": "formLabelRoot",
                        }
                      }
                      control={
                        <ForwardRef(WithStyles(Component))
                          checked={false}
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          label="label 1"
                          onChange={[Function]}
                          value="name 1"
                        />
                      }
                      disabled={false}
                      key="label 1"
                      label="label 1"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled disabled",
                            "label": "MuiFormControlLabel-label",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root formLabelRoot",
                          }
                        }
                        control={
                          <ForwardRef(WithStyles(Component))
                            checked={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 1"
                            onChange={[Function]}
                            value="name 1"
                          />
                        }
                        disabled={false}
                        label="label 1"
                      >
                        <label
                          className="MuiFormControlLabel-root formLabelRoot"
                        >
                          <WithStyles(Component)
                            checked={false}
                            disabled={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 1"
                            onChange={[Function]}
                            value="name 1"
                          >
                            <Component
                              checked={false}
                              classes={
                                Object {
                                  "checked": "Component-checked-7",
                                  "disabled": "Component-disabled-6",
                                  "root": "Component-root-5",
                                }
                              }
                              disabled={false}
                              inputProps={
                                Object {
                                  "aria-label": "primary checkbox",
                                }
                              }
                              label="label 1"
                              onChange={[Function]}
                              value="name 1"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Component-checked-7",
                                    "disabled": "Component-disabled-6",
                                    "root": "Component-root-5",
                                  }
                                }
                                color="default"
                                disabled={false}
                                inputProps={
                                  Object {
                                    "aria-label": "primary checkbox",
                                  }
                                }
                                label="label 1"
                                onChange={[Function]}
                                value="name 1"
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  classes={
                                    Object {
                                      "checked": "Mui-checked Component-checked-7",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled Component-disabled-6",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root Component-root-5",
                                    }
                                  }
                                  color="default"
                                  disabled={false}
                                  inputProps={
                                    Object {
                                      "aria-label": "primary checkbox",
                                    }
                                  }
                                  label="label 1"
                                  onChange={[Function]}
                                  value="name 1"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={<UNDEFINED />}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked Component-checked-7",
                                        "disabled": "Mui-disabled Component-disabled-6",
                                        "root": "MuiCheckbox-root Component-root-5",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    icon={<UNDEFINED />}
                                    inputProps={
                                      Object {
                                        "aria-label": "primary checkbox",
                                        "data-indeterminate": false,
                                      }
                                    }
                                    label="label 1"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value="name 1"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={<UNDEFINED />}
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked Component-checked-7",
                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled Component-disabled-6",
                                          "input": "PrivateSwitchBase-input-4",
                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5",
                                        }
                                      }
                                      color="default"
                                      disabled={false}
                                      icon={<UNDEFINED />}
                                      inputProps={
                                        Object {
                                          "aria-label": "primary checkbox",
                                          "data-indeterminate": false,
                                        }
                                      }
                                      label="label 1"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value="name 1"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                        color="default"
                                        component="span"
                                        disabled={false}
                                        label="label 1"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disabled={false}
                                          label="label 1"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            label="label 1"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              label="label 1"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                                label="label 1"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    aria-label="primary checkbox"
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-4"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value="name 1"
                                                  />
                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                            </Component>
                          </WithStyles(Component)>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                              >
                                label 1
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "disabled": "disabled",
                          "root": "formLabelRoot",
                        }
                      }
                      control={
                        <ForwardRef(WithStyles(Component))
                          checked={false}
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          label="label 2"
                          onChange={[Function]}
                          value="name 2"
                        />
                      }
                      disabled={false}
                      key="label 2"
                      label="label 2"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled disabled",
                            "label": "MuiFormControlLabel-label",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root formLabelRoot",
                          }
                        }
                        control={
                          <ForwardRef(WithStyles(Component))
                            checked={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 2"
                            onChange={[Function]}
                            value="name 2"
                          />
                        }
                        disabled={false}
                        label="label 2"
                      >
                        <label
                          className="MuiFormControlLabel-root formLabelRoot"
                        >
                          <WithStyles(Component)
                            checked={false}
                            disabled={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 2"
                            onChange={[Function]}
                            value="name 2"
                          >
                            <Component
                              checked={false}
                              classes={
                                Object {
                                  "checked": "Component-checked-7",
                                  "disabled": "Component-disabled-6",
                                  "root": "Component-root-5",
                                }
                              }
                              disabled={false}
                              inputProps={
                                Object {
                                  "aria-label": "primary checkbox",
                                }
                              }
                              label="label 2"
                              onChange={[Function]}
                              value="name 2"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Component-checked-7",
                                    "disabled": "Component-disabled-6",
                                    "root": "Component-root-5",
                                  }
                                }
                                color="default"
                                disabled={false}
                                inputProps={
                                  Object {
                                    "aria-label": "primary checkbox",
                                  }
                                }
                                label="label 2"
                                onChange={[Function]}
                                value="name 2"
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  classes={
                                    Object {
                                      "checked": "Mui-checked Component-checked-7",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled Component-disabled-6",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root Component-root-5",
                                    }
                                  }
                                  color="default"
                                  disabled={false}
                                  inputProps={
                                    Object {
                                      "aria-label": "primary checkbox",
                                    }
                                  }
                                  label="label 2"
                                  onChange={[Function]}
                                  value="name 2"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={<UNDEFINED />}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked Component-checked-7",
                                        "disabled": "Mui-disabled Component-disabled-6",
                                        "root": "MuiCheckbox-root Component-root-5",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    icon={<UNDEFINED />}
                                    inputProps={
                                      Object {
                                        "aria-label": "primary checkbox",
                                        "data-indeterminate": false,
                                      }
                                    }
                                    label="label 2"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value="name 2"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={<UNDEFINED />}
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked Component-checked-7",
                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled Component-disabled-6",
                                          "input": "PrivateSwitchBase-input-4",
                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5",
                                        }
                                      }
                                      color="default"
                                      disabled={false}
                                      icon={<UNDEFINED />}
                                      inputProps={
                                        Object {
                                          "aria-label": "primary checkbox",
                                          "data-indeterminate": false,
                                        }
                                      }
                                      label="label 2"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value="name 2"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                        color="default"
                                        component="span"
                                        disabled={false}
                                        label="label 2"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disabled={false}
                                          label="label 2"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            label="label 2"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              label="label 2"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                                label="label 2"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    aria-label="primary checkbox"
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-4"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value="name 2"
                                                  />
                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                            </Component>
                          </WithStyles(Component)>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                              >
                                label 2
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                    <WithStyles(ForwardRef(Grid))
                      className="warning"
                      item={true}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        className="warning"
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root warning MuiGrid-item MuiGrid-grid-xs-12"
                        >
                          Sample Error
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                  </div>
                </ForwardRef(FormGroup)>
              </WithStyles(ForwardRef(FormGroup))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</CheckboxComponent>
`;

exports[`components/checkBox Renders with options 1`] = `
<CheckboxComponent
  disabled={false}
  handleCheckBoxValue={[Function]}
  hideButton={true}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [],
    }
  }
  label="Dummy Label"
  meta={
    Object {
      "error": "",
      "submitFailed": false,
    }
  }
  onHideBtnClick={[Function]}
  row={true}
  values={
    Array [
      Object {
        "label": "label 1",
        "name": "name 1",
      },
      Object {
        "label": "label 2",
        "name": "name 2",
      },
    ]
  }
  visible={false}
>
  <WithStyles(ForwardRef(Grid))
    className="container"
    container={true}
    direction="row"
  >
    <ForwardRef(Grid)
      className="container"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
      direction="row"
    >
      <div
        className="MuiGrid-root container MuiGrid-container"
      >
        <WithStyles(ForwardRef(Grid))
          className="label"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="label"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root label MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              Dummy Label
              <HideButton
                isSection={false}
                onHideBtnClick={[Function]}
                visible={false}
              >
                <div
                  className="hideBtn"
                  onClick={[Function]}
                  role="presentation"
                >
                  <WithStyles(ForwardRef(Switch))
                    checked={false}
                    color="primary"
                    inputProps={
                      Object {
                        "aria-label": "primary checkbox",
                      }
                    }
                    name="checkedA"
                    onChange={[Function]}
                    size="small"
                  >
                    <ForwardRef(Switch)
                      checked={false}
                      classes={
                        Object {
                          "checked": "Mui-checked",
                          "colorPrimary": "MuiSwitch-colorPrimary",
                          "colorSecondary": "MuiSwitch-colorSecondary",
                          "disabled": "Mui-disabled",
                          "edgeEnd": "MuiSwitch-edgeEnd",
                          "edgeStart": "MuiSwitch-edgeStart",
                          "input": "MuiSwitch-input",
                          "root": "MuiSwitch-root",
                          "sizeSmall": "MuiSwitch-sizeSmall",
                          "switchBase": "MuiSwitch-switchBase",
                          "thumb": "MuiSwitch-thumb",
                          "track": "MuiSwitch-track",
                        }
                      }
                      color="primary"
                      inputProps={
                        Object {
                          "aria-label": "primary checkbox",
                        }
                      }
                      name="checkedA"
                      onChange={[Function]}
                      size="small"
                    >
                      <span
                        className="MuiSwitch-root MuiSwitch-sizeSmall"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <span
                              className="MuiSwitch-thumb"
                            />
                          }
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "input": "MuiSwitch-input",
                              "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                            }
                          }
                          icon={
                            <span
                              className="MuiSwitch-thumb"
                            />
                          }
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          name="checkedA"
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <span
                                className="MuiSwitch-thumb"
                              />
                            }
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                              }
                            }
                            icon={
                              <span
                                className="MuiSwitch-thumb"
                              />
                            }
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            name="checkedA"
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                              component="span"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                component="span"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                  component="span"
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          aria-label="primary checkbox"
                                          checked={false}
                                          className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                          name="checkedA"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                        <span
                          className="MuiSwitch-track"
                        />
                      </span>
                    </ForwardRef(Switch)>
                  </WithStyles(ForwardRef(Switch))>
                  <div
                    className="hideSection"
                  >
                    Hidden
                  </div>
                </div>
              </HideButton>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="inputWrapper"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="inputWrapper"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root inputWrapper MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              <WithStyles(ForwardRef(FormGroup))
                row={true}
              >
                <ForwardRef(FormGroup)
                  classes={
                    Object {
                      "root": "MuiFormGroup-root",
                      "row": "MuiFormGroup-row",
                    }
                  }
                  row={true}
                >
                  <div
                    className="MuiFormGroup-root MuiFormGroup-row"
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "disabled": "disabled",
                          "root": "formLabelRoot",
                        }
                      }
                      control={
                        <ForwardRef(WithStyles(Component))
                          checked={false}
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          label="label 1"
                          onChange={[Function]}
                          value="name 1"
                        />
                      }
                      disabled={false}
                      key="label 1"
                      label="label 1"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled disabled",
                            "label": "MuiFormControlLabel-label",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root formLabelRoot",
                          }
                        }
                        control={
                          <ForwardRef(WithStyles(Component))
                            checked={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 1"
                            onChange={[Function]}
                            value="name 1"
                          />
                        }
                        disabled={false}
                        label="label 1"
                      >
                        <label
                          className="MuiFormControlLabel-root formLabelRoot"
                        >
                          <WithStyles(Component)
                            checked={false}
                            disabled={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 1"
                            onChange={[Function]}
                            value="name 1"
                          >
                            <Component
                              checked={false}
                              classes={
                                Object {
                                  "checked": "Component-checked-7",
                                  "disabled": "Component-disabled-6",
                                  "root": "Component-root-5",
                                }
                              }
                              disabled={false}
                              inputProps={
                                Object {
                                  "aria-label": "primary checkbox",
                                }
                              }
                              label="label 1"
                              onChange={[Function]}
                              value="name 1"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Component-checked-7",
                                    "disabled": "Component-disabled-6",
                                    "root": "Component-root-5",
                                  }
                                }
                                color="default"
                                disabled={false}
                                inputProps={
                                  Object {
                                    "aria-label": "primary checkbox",
                                  }
                                }
                                label="label 1"
                                onChange={[Function]}
                                value="name 1"
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  classes={
                                    Object {
                                      "checked": "Mui-checked Component-checked-7",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled Component-disabled-6",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root Component-root-5",
                                    }
                                  }
                                  color="default"
                                  disabled={false}
                                  inputProps={
                                    Object {
                                      "aria-label": "primary checkbox",
                                    }
                                  }
                                  label="label 1"
                                  onChange={[Function]}
                                  value="name 1"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={<UNDEFINED />}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked Component-checked-7",
                                        "disabled": "Mui-disabled Component-disabled-6",
                                        "root": "MuiCheckbox-root Component-root-5",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    icon={<UNDEFINED />}
                                    inputProps={
                                      Object {
                                        "aria-label": "primary checkbox",
                                        "data-indeterminate": false,
                                      }
                                    }
                                    label="label 1"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value="name 1"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={<UNDEFINED />}
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked Component-checked-7",
                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled Component-disabled-6",
                                          "input": "PrivateSwitchBase-input-4",
                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5",
                                        }
                                      }
                                      color="default"
                                      disabled={false}
                                      icon={<UNDEFINED />}
                                      inputProps={
                                        Object {
                                          "aria-label": "primary checkbox",
                                          "data-indeterminate": false,
                                        }
                                      }
                                      label="label 1"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value="name 1"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                        color="default"
                                        component="span"
                                        disabled={false}
                                        label="label 1"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disabled={false}
                                          label="label 1"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            label="label 1"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              label="label 1"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                                label="label 1"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    aria-label="primary checkbox"
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-4"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value="name 1"
                                                  />
                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                            </Component>
                          </WithStyles(Component)>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                              >
                                label 1
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "disabled": "disabled",
                          "root": "formLabelRoot",
                        }
                      }
                      control={
                        <ForwardRef(WithStyles(Component))
                          checked={false}
                          inputProps={
                            Object {
                              "aria-label": "primary checkbox",
                            }
                          }
                          label="label 2"
                          onChange={[Function]}
                          value="name 2"
                        />
                      }
                      disabled={false}
                      key="label 2"
                      label="label 2"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled disabled",
                            "label": "MuiFormControlLabel-label",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root formLabelRoot",
                          }
                        }
                        control={
                          <ForwardRef(WithStyles(Component))
                            checked={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 2"
                            onChange={[Function]}
                            value="name 2"
                          />
                        }
                        disabled={false}
                        label="label 2"
                      >
                        <label
                          className="MuiFormControlLabel-root formLabelRoot"
                        >
                          <WithStyles(Component)
                            checked={false}
                            disabled={false}
                            inputProps={
                              Object {
                                "aria-label": "primary checkbox",
                              }
                            }
                            label="label 2"
                            onChange={[Function]}
                            value="name 2"
                          >
                            <Component
                              checked={false}
                              classes={
                                Object {
                                  "checked": "Component-checked-7",
                                  "disabled": "Component-disabled-6",
                                  "root": "Component-root-5",
                                }
                              }
                              disabled={false}
                              inputProps={
                                Object {
                                  "aria-label": "primary checkbox",
                                }
                              }
                              label="label 2"
                              onChange={[Function]}
                              value="name 2"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Component-checked-7",
                                    "disabled": "Component-disabled-6",
                                    "root": "Component-root-5",
                                  }
                                }
                                color="default"
                                disabled={false}
                                inputProps={
                                  Object {
                                    "aria-label": "primary checkbox",
                                  }
                                }
                                label="label 2"
                                onChange={[Function]}
                                value="name 2"
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  classes={
                                    Object {
                                      "checked": "Mui-checked Component-checked-7",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled Component-disabled-6",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root Component-root-5",
                                    }
                                  }
                                  color="default"
                                  disabled={false}
                                  inputProps={
                                    Object {
                                      "aria-label": "primary checkbox",
                                    }
                                  }
                                  label="label 2"
                                  onChange={[Function]}
                                  value="name 2"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={<UNDEFINED />}
                                    classes={
                                      Object {
                                        "checked": "Mui-checked Component-checked-7",
                                        "disabled": "Mui-disabled Component-disabled-6",
                                        "root": "MuiCheckbox-root Component-root-5",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    icon={<UNDEFINED />}
                                    inputProps={
                                      Object {
                                        "aria-label": "primary checkbox",
                                        "data-indeterminate": false,
                                      }
                                    }
                                    label="label 2"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value="name 2"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={<UNDEFINED />}
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-2 Mui-checked Component-checked-7",
                                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled Component-disabled-6",
                                          "input": "PrivateSwitchBase-input-4",
                                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5",
                                        }
                                      }
                                      color="default"
                                      disabled={false}
                                      icon={<UNDEFINED />}
                                      inputProps={
                                        Object {
                                          "aria-label": "primary checkbox",
                                          "data-indeterminate": false,
                                        }
                                      }
                                      label="label 2"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value="name 2"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                        color="default"
                                        component="span"
                                        disabled={false}
                                        label="label 2"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disabled={false}
                                          label="label 2"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            label="label 2"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              label="label 2"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root Component-root-5"
                                                label="label 2"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    aria-label="primary checkbox"
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-4"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value="name 2"
                                                  />
                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                            </Component>
                          </WithStyles(Component)>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                              >
                                label 2
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </div>
                </ForwardRef(FormGroup)>
              </WithStyles(ForwardRef(FormGroup))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</CheckboxComponent>
`;
