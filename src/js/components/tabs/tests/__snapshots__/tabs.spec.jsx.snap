// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Tabs Renders default options 1`] = `
<div
  className="makeStyles-root-5"
>
  <WithStyles(ForwardRef(AppBar))
    className="makeStyles-background-2"
    elevation={2}
    position="static"
  >
    <WithStyles(ForwardRef(Tabs))
      TabIndicatorProps={
        Object {
          "style": Object {
            "backgroundColor": "#1518AF",
            "color": "#1518AF",
          },
        }
      }
      classes={
        Object {
          "scrollButtons": "makeStyles-btn-6",
        }
      }
      indicatorColor="primary"
      onChange={[Function]}
      scrollButtons="auto"
      textColor="primary"
      value={0}
      variant="standard"
    />
  </WithStyles(ForwardRef(AppBar))>
</div>
`;

exports[`components/Tabs Renders with options 1`] = `
<EnhancedTabs
  onChange={[Function]}
  refTab={[Function]}
  scrollable={false}
  tabList={
    Array [
      Object {
        "content": <p>
          tab 1
        </p>,
        "label": "TAB1",
      },
      Object {
        "content": <p>
          tab 2
        </p>,
        "label": "TAB 2",
      },
    ]
  }
  value={0}
>
  <div
    className="makeStyles-root-5"
  >
    <WithStyles(ForwardRef(AppBar))
      className="makeStyles-background-2"
      elevation={2}
      position="static"
    >
      <ForwardRef(AppBar)
        className="makeStyles-background-2"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault",
            "colorInherit": "MuiAppBar-colorInherit",
            "colorPrimary": "MuiAppBar-colorPrimary",
            "colorSecondary": "MuiAppBar-colorSecondary",
            "colorTransparent": "MuiAppBar-colorTransparent",
            "positionAbsolute": "MuiAppBar-positionAbsolute",
            "positionFixed": "MuiAppBar-positionFixed",
            "positionRelative": "MuiAppBar-positionRelative",
            "positionStatic": "MuiAppBar-positionStatic",
            "positionSticky": "MuiAppBar-positionSticky",
            "root": "MuiAppBar-root",
          }
        }
        elevation={2}
        position="static"
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-background-2"
          component="header"
          elevation={2}
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-background-2"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            component="header"
            elevation={2}
            square={true}
          >
            <header
              className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary makeStyles-background-2 MuiPaper-elevation2"
            >
              <WithStyles(ForwardRef(Tabs))
                TabIndicatorProps={
                  Object {
                    "style": Object {
                      "backgroundColor": "#1518AF",
                      "color": "#1518AF",
                    },
                  }
                }
                classes={
                  Object {
                    "scrollButtons": "makeStyles-btn-6",
                  }
                }
                indicatorColor="primary"
                onChange={[Function]}
                scrollButtons="auto"
                textColor="primary"
                value={0}
                variant="standard"
              >
                <ForwardRef(Tabs)
                  TabIndicatorProps={
                    Object {
                      "style": Object {
                        "backgroundColor": "#1518AF",
                        "color": "#1518AF",
                      },
                    }
                  }
                  classes={
                    Object {
                      "centered": "MuiTabs-centered",
                      "fixed": "MuiTabs-fixed",
                      "flexContainer": "MuiTabs-flexContainer",
                      "flexContainerVertical": "MuiTabs-flexContainerVertical",
                      "indicator": "MuiTabs-indicator",
                      "root": "MuiTabs-root",
                      "scrollButtons": "MuiTabs-scrollButtons makeStyles-btn-6",
                      "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                      "scrollable": "MuiTabs-scrollable",
                      "scroller": "MuiTabs-scroller",
                      "vertical": "MuiTabs-vertical",
                    }
                  }
                  indicatorColor="primary"
                  onChange={[Function]}
                  scrollButtons="auto"
                  textColor="primary"
                  value={0}
                  variant="standard"
                >
                  <div
                    className="MuiTabs-root"
                  >
                    <div
                      className="MuiTabs-scroller MuiTabs-fixed"
                      onScroll={[Function]}
                      style={
                        Object {
                          "marginBottom": null,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <div
                        className="MuiTabs-flexContainer"
                        onKeyDown={[Function]}
                        role="tablist"
                      >
                        <WithStyles(ForwardRef(Tab))
                          aria-controls="tabpanel-0"
                          className="makeStyles-tabBtn-7"
                          fullWidth={false}
                          id="tab-0"
                          indicator={false}
                          key=".$TAB1"
                          label="TAB1"
                          onChange={[Function]}
                          selected={true}
                          textColor="primary"
                          value={0}
                        >
                          <ForwardRef(Tab)
                            aria-controls="tabpanel-0"
                            className="makeStyles-tabBtn-7"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "fullWidth": "MuiTab-fullWidth",
                                "labelIcon": "MuiTab-labelIcon",
                                "root": "MuiTab-root",
                                "selected": "Mui-selected",
                                "textColorInherit": "MuiTab-textColorInherit",
                                "textColorPrimary": "MuiTab-textColorPrimary",
                                "textColorSecondary": "MuiTab-textColorSecondary",
                                "wrapped": "MuiTab-wrapped",
                                "wrapper": "MuiTab-wrapper",
                              }
                            }
                            fullWidth={false}
                            id="tab-0"
                            indicator={false}
                            label="TAB1"
                            onChange={[Function]}
                            selected={true}
                            textColor="primary"
                            value={0}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-controls="tabpanel-0"
                              aria-selected={true}
                              className="MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7 Mui-selected"
                              disabled={false}
                              focusRipple={true}
                              id="tab-0"
                              onClick={[Function]}
                              onFocus={[Function]}
                              role="tab"
                              tabIndex={0}
                            >
                              <ForwardRef(ButtonBase)
                                aria-controls="tabpanel-0"
                                aria-selected={true}
                                className="MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7 Mui-selected"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                id="tab-0"
                                onClick={[Function]}
                                onFocus={[Function]}
                                role="tab"
                                tabIndex={0}
                              >
                                <button
                                  aria-controls="tabpanel-0"
                                  aria-selected={true}
                                  className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7 Mui-selected"
                                  disabled={false}
                                  id="tab-0"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="tab"
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiTab-wrapper"
                                  >
                                    TAB1
                                  </span>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Tab)>
                        </WithStyles(ForwardRef(Tab))>
                        <WithStyles(ForwardRef(Tab))
                          aria-controls="tabpanel-1"
                          className="makeStyles-tabBtn-7"
                          fullWidth={false}
                          id="tab-1"
                          indicator={false}
                          key=".$TAB 2"
                          label="TAB 2"
                          onChange={[Function]}
                          selected={false}
                          textColor="primary"
                          value={1}
                        >
                          <ForwardRef(Tab)
                            aria-controls="tabpanel-1"
                            className="makeStyles-tabBtn-7"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "fullWidth": "MuiTab-fullWidth",
                                "labelIcon": "MuiTab-labelIcon",
                                "root": "MuiTab-root",
                                "selected": "Mui-selected",
                                "textColorInherit": "MuiTab-textColorInherit",
                                "textColorPrimary": "MuiTab-textColorPrimary",
                                "textColorSecondary": "MuiTab-textColorSecondary",
                                "wrapped": "MuiTab-wrapped",
                                "wrapper": "MuiTab-wrapper",
                              }
                            }
                            fullWidth={false}
                            id="tab-1"
                            indicator={false}
                            label="TAB 2"
                            onChange={[Function]}
                            selected={false}
                            textColor="primary"
                            value={1}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-controls="tabpanel-1"
                              aria-selected={false}
                              className="MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7"
                              disabled={false}
                              focusRipple={true}
                              id="tab-1"
                              onClick={[Function]}
                              onFocus={[Function]}
                              role="tab"
                              tabIndex={-1}
                            >
                              <ForwardRef(ButtonBase)
                                aria-controls="tabpanel-1"
                                aria-selected={false}
                                className="MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                id="tab-1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                role="tab"
                                tabIndex={-1}
                              >
                                <button
                                  aria-controls="tabpanel-1"
                                  aria-selected={false}
                                  className="MuiButtonBase-root MuiTab-root MuiTab-textColorPrimary makeStyles-tabBtn-7"
                                  disabled={false}
                                  id="tab-1"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                  type="button"
                                >
                                  <span
                                    className="MuiTab-wrapper"
                                  >
                                    TAB 2
                                  </span>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Tab)>
                        </WithStyles(ForwardRef(Tab))>
                      </div>
                      <WithStyles(ForwardRef(TabIndicator))
                        className="MuiTabs-indicator"
                        color="primary"
                        orientation="horizontal"
                        style={
                          Object {
                            "backgroundColor": "#1518AF",
                            "color": "#1518AF",
                            "left": 0,
                            "width": 0,
                          }
                        }
                      >
                        <ForwardRef(TabIndicator)
                          className="MuiTabs-indicator"
                          classes={
                            Object {
                              "colorPrimary": "PrivateTabIndicator-colorPrimary-9",
                              "colorSecondary": "PrivateTabIndicator-colorSecondary-10",
                              "root": "PrivateTabIndicator-root-8",
                              "vertical": "PrivateTabIndicator-vertical-11",
                            }
                          }
                          color="primary"
                          orientation="horizontal"
                          style={
                            Object {
                              "backgroundColor": "#1518AF",
                              "color": "#1518AF",
                              "left": 0,
                              "width": 0,
                            }
                          }
                        >
                          <span
                            className="PrivateTabIndicator-root-8 PrivateTabIndicator-colorPrimary-9 MuiTabs-indicator"
                            style={
                              Object {
                                "backgroundColor": "#1518AF",
                                "color": "#1518AF",
                                "left": 0,
                                "width": 0,
                              }
                            }
                          />
                        </ForwardRef(TabIndicator)>
                      </WithStyles(ForwardRef(TabIndicator))>
                    </div>
                  </div>
                </ForwardRef(Tabs)>
              </WithStyles(ForwardRef(Tabs))>
            </header>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(AppBar)>
    </WithStyles(ForwardRef(AppBar))>
    <TabPanel
      index={0}
      key="TAB1"
      spacing="yes"
      value={0}
    >
      <WithStyles(ForwardRef(Typography))
        aria-labelledby="simple-tab-0"
        component="div"
        hidden={false}
        id="simple-tabpanel-0"
        role="tabpanel"
      >
        <ForwardRef(Typography)
          aria-labelledby="simple-tab-0"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="div"
          hidden={false}
          id="simple-tabpanel-0"
          role="tabpanel"
        >
          <div
            aria-labelledby="simple-tab-0"
            className="MuiTypography-root MuiTypography-body1"
            hidden={false}
            id="simple-tabpanel-0"
            role="tabpanel"
          >
            <Styled(MuiBox)
              className="makeStyles-box-3"
              p={3}
            >
              <div
                className="MuiBox-root MuiBox-root-12 makeStyles-box-3"
              >
                <p>
                  tab 1
                </p>
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </TabPanel>
    <TabPanel
      index={1}
      key="TAB 2"
      spacing="yes"
      value={0}
    >
      <WithStyles(ForwardRef(Typography))
        aria-labelledby="simple-tab-1"
        component="div"
        hidden={true}
        id="simple-tabpanel-1"
        role="tabpanel"
      >
        <ForwardRef(Typography)
          aria-labelledby="simple-tab-1"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="div"
          hidden={true}
          id="simple-tabpanel-1"
          role="tabpanel"
        >
          <div
            aria-labelledby="simple-tab-1"
            className="MuiTypography-root MuiTypography-body1"
            hidden={true}
            id="simple-tabpanel-1"
            role="tabpanel"
          />
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </TabPanel>
  </div>
</EnhancedTabs>
`;
